/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TradesImport } from './routes/trades'
import { Route as OrdersImport } from './routes/orders'
import { Route as OpenstockImport } from './routes/openstock'
import { Route as DepotImport } from './routes/depot'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TradesRoute = TradesImport.update({
  id: '/trades',
  path: '/trades',
  getParentRoute: () => rootRoute,
} as any)

const OrdersRoute = OrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRoute,
} as any)

const OpenstockRoute = OpenstockImport.update({
  id: '/openstock',
  path: '/openstock',
  getParentRoute: () => rootRoute,
} as any)

const DepotRoute = DepotImport.update({
  id: '/depot',
  path: '/depot',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/depot': {
      id: '/depot'
      path: '/depot'
      fullPath: '/depot'
      preLoaderRoute: typeof DepotImport
      parentRoute: typeof rootRoute
    }
    '/openstock': {
      id: '/openstock'
      path: '/openstock'
      fullPath: '/openstock'
      preLoaderRoute: typeof OpenstockImport
      parentRoute: typeof rootRoute
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersImport
      parentRoute: typeof rootRoute
    }
    '/trades': {
      id: '/trades'
      path: '/trades'
      fullPath: '/trades'
      preLoaderRoute: typeof TradesImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/depot': typeof DepotRoute
  '/openstock': typeof OpenstockRoute
  '/orders': typeof OrdersRoute
  '/trades': typeof TradesRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/depot': typeof DepotRoute
  '/openstock': typeof OpenstockRoute
  '/orders': typeof OrdersRoute
  '/trades': typeof TradesRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/depot': typeof DepotRoute
  '/openstock': typeof OpenstockRoute
  '/orders': typeof OrdersRoute
  '/trades': typeof TradesRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/depot' | '/openstock' | '/orders' | '/trades'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/depot' | '/openstock' | '/orders' | '/trades'
  id: '__root__' | '/' | '/depot' | '/openstock' | '/orders' | '/trades'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DepotRoute: typeof DepotRoute
  OpenstockRoute: typeof OpenstockRoute
  OrdersRoute: typeof OrdersRoute
  TradesRoute: typeof TradesRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DepotRoute: DepotRoute,
  OpenstockRoute: OpenstockRoute,
  OrdersRoute: OrdersRoute,
  TradesRoute: TradesRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/depot",
        "/openstock",
        "/orders",
        "/trades"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/depot": {
      "filePath": "depot.tsx"
    },
    "/openstock": {
      "filePath": "openstock.tsx"
    },
    "/orders": {
      "filePath": "orders.tsx"
    },
    "/trades": {
      "filePath": "trades.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
